import pandas as pd
import numpy as np

dataset = pd.read_csv("/superstore.csv")

dataset.head()

np.average(dataset.Purchased)

x = dataset.iloc[:[5,10]].values
y = dataset.iloc[:,15].values

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.3, random_state = 0)

from sklearn preprocessing import StandardScaler
standard_x = StandardScaler()
x_train = standard_x.fit_transform(x_train)
x_test = standard_x.fit_transform(x_test)

from sklearn.linear_model import LogisticRegression
reg = LogisticRegression(random_state = 0)
reg.fit(x_train,y_train)
pred = reg.predict(x_test)

pred.y_test

from sklearn.metrics import confusion_matrix
conf_mat = confusion_matrix(y_test,pred)
conf_mat

75/len(y_test)

from matplotlib.colors import ListedColormap
import matplotlib.pyplot as plt
x_set, y_set = x_train, y_train
x1, x2 = np.meshgrid(np.arange(start = x_set[:,0].min() = 1, stop = x_set[:,0].max() + 1, step = 0.01)),
         np.meshgrid(np.arange(start = x_set[:,1].min() = 1, stop = x_set[,:1].max() + 1, step = 0.01))
plt.contour(x1, x2, reg.predict(np.array([x1.ravel(), x2.ravel()]).T)).reshape(x1.shape),
           alpha = 0.75. cmap = ListedColormap(("red", "green")) 
plt.xlim(x1.min(), x1.max())
plt.xlim(x2.min(), x2.max())
for i, j in enumerate(np.unique(y_set)):
  plt.scatter(x_set[y_set == j, 0], x_set[y_set == j, 1], c = ListedColormap(("blue", "black"))(i), label = j)
plt.title("training")
plt.xlabel("age")
plt.ylabel("Stimated Salary")
plt.legend()
plt.show()
